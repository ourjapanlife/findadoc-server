version: "3.8"
services:
  db:
    image: postgres:14-alpine
    networks:
      new:
        aliases:
          - database
    env_file:
      - .env
    ports:
      - ${POSTGRES_PORT}:${DOCKER_INTERNAL_PORT}
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"
        ]
      interval: 10s
      timeout: 3s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/findadoc-data # persist data even if container shuts down
  db-configure:
    image: postgres:14-alpine
    depends_on:
      - db
    networks:
      new:
        aliases:
          - database
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DOCKER_POSTGRES_HOST}:${DOCKER_INTERNAL_PORT}/${POSTGRES_DB}?schema=public
      - SHADOW_DB_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DOCKER_POSTGRES_HOST}:${DOCKER_INTERNAL_PORT}/${SHADOW_DB}?schema=public
    entrypoint: /docker/db-init.sh
    volumes:
      - ./docker:/docker
      - status:/out
  install-deps:
    depends_on:
      - db-configure
    env_file:
      - .env
    image: node:18.12.1-alpine
    networks:
      - new
    working_dir: /target
    volumes:
      - .:/target
    command: "yarn install"
  migrate:
    depends_on:
      - db-configure
      - install-deps
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DOCKER_POSTGRES_HOST}:${DOCKER_INTERNAL_PORT}/${POSTGRES_DB}?schema=public
      - SHADOW_DB_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DOCKER_POSTGRES_HOST}:${DOCKER_INTERNAL_PORT}/${SHADOW_DB}?schema=public
    links:
      - db
    networks:
      - new
    image: node:18.12.1-alpine
    working_dir: /target
    volumes:
      - .:/target
      - status:/in
    command: "sh -c 'until [[ -f /in/db-init-done && -d /target/node_modules ]]; do sleep 1; done; yarn migrate'"

volumes:
  pgdata:
  status:


networks:
  new:
