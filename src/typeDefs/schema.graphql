type Facility {
  id: ID!
  nameEn: String!
  nameJa: String!
  contact: Contact!
  healthcareProfessionalIds: [ID!]!
  createdDate: String!
  updatedDate: String!
}

input CreateFacilityInput {
  nameEn: String!
  nameJa: String!
  contact: ContactInput!
  healthcareProfessionalIds: [ID!]
}

input UpdateFacilityInput {
  nameEn: String
  nameJa: String
  contact: ContactInput
  healthcareProfessionalIds: [RelationshipInput!]
}

input FacilitySearchFilters {
  nameEn: String
  nameJa: String
  contact: ContactInput
  healthcareProfessionalName: String
  createdDate: String
  updatedDate: String
  orderBy: [OrderBy!]
  limit: Int
  offset: Int
}

type HealthcareProfessional {
  id: ID!
  names: [LocaleName!]!
  spokenLanguages: [SpokenLanguage!]!
  degrees: [Degree!]!
  specialties: [Specialty!]!
  acceptedInsurance: [Insurance!]!
  facilityIds: [ID!]!
  createdDate: String!
  updatedDate: String!
}

input CreateHealthcareProfessionalInput {
  names: [LocaleNameInput!]!
  spokenLanguages: [SpokenLanguageInput!]
  degrees: [DegreeInput!]
  specialties: [SpecialtyInput!]
  acceptedInsurance: [Insurance!]
  facilityIds: [ID!]!
}

input UpdateHealthcareProfessionalInput {
  names: [LocaleNameInput!]
  spokenLanguages: [SpokenLanguageInput!]
  degrees: [DegreeInput!]
  specialties: [SpecialtyInput!]
  acceptedInsurance: [Insurance!]
  facilityIds: [RelationshipInput!]
}

input HealthcareProfessionalSearchFilters {
  names: [LocaleNameInput!]
  spokenLanguages: [SpokenLanguageInput!]
  degrees: [DegreeInput!]
  specialties: [SpecialtyInput!]
  acceptedInsurance: [Insurance!]
  createdDate: String
  updatedDate: String
  orderBy: [OrderBy!]
  limit: Int
  offset: Int
}

type Submission {
  id: ID!
  googleMapsUrl: String!
  healthcareProfessionalName: String!
  spokenLanguages: [SpokenLanguage!]!
  facility: Facility
  healthcareProfessionals: [HealthcareProfessional!]
  isUnderReview: Boolean!
  isApproved: Boolean!
  isRejected: Boolean!
  createdDate: String!
  updatedDate: String!
}

input CreateSubmissionInput {
  googleMapsUrl: String
  healthcareProfessionalName: String
  spokenLanguages: [SpokenLanguageInput!]
}

input UpdateSubmissionInput {
  googleMapsUrl: String
  healthcareProfessionalName: String
  spokenLanguages: [SpokenLanguageInput!]
  facility: CreateFacilityInput
  healthcareProfessionals: [CreateHealthcareProfessionalInput!]
  isUnderReview: Boolean
  isApproved: Boolean
  isRejected: Boolean
}

input SubmissionSearchFilters {
  googleMapsUrl: String
  healthcareProfessionalName: String
  spokenLanguages: [SpokenLanguageInput!]
  isUnderReview: Boolean
  isApproved: Boolean
  isRejected: Boolean
  createdDate: String
  updatedDate: String
  orderBy: [OrderBy!]
  limit: Int
  offset: Int
}

type Relationship {
  action: RelationshipAction!
  otherEntityId: ID!
}
input RelationshipInput {
  action: RelationshipAction!
  otherEntityId: ID!
}

enum RelationshipAction {
  CREATE
  UPDATE
  DELETE
}

type Contact {
  googleMapsUrl: String!
  email: String!
  phone: String!
  website: String
  address: PhysicalAddress!
}
input ContactInput {
  googleMapsUrl: String!
  email: String!
  phone: String!
  website: String
  address: PhysicalAddressInput!
}

type PhysicalAddress {
  postalCode: String!
  prefectureEn: String!
  cityEn: String!
  addressLine1En: String!
  addressLine2En: String!
  prefectureJa: String!
  cityJa: String!
  addressLine1Ja: String!
  addressLine2Ja: String!
}
input PhysicalAddressInput {
  postalCode: String!
  prefectureEn: String!
  cityEn: String!
  addressLine1En: String!
  addressLine2En: String!
  prefectureJa: String!
  cityJa: String!
  addressLine1Ja: String!
  addressLine2Ja: String!
}

type LocaleName {
  lastName: String!
  firstName: String!
  middleName: String!
  locale: Locale! 
}
input LocaleNameInput {
  lastName: String!
  firstName: String!
  middleName: String!
  locale: Locale! 
}

enum Locale {
  ENGLISH
  JAPANESE
}

type Specialty {
  names: [SpecialtyName!]!
}
input SpecialtyInput {
  names: [SpecialtyNameInput!]!
}

type SpecialtyName {
  name: String!
  locale: Locale!
}
input SpecialtyNameInput {
  name: String!
  locale: Locale!
}

type SpokenLanguage {
  iso639_3: String!
  nameJa: String!
  nameEn: String!
  nameNative: String!
}
input SpokenLanguageInput {
  iso639_3: String!
  nameJa: String!
  nameEn: String!
  nameNative: String!
}

type Degree {
  nameJa: String!
  nameEn: String!
  abbreviation: String!
}
input DegreeInput {
  nameJa: String!
  nameEn: String!
  abbreviation: String!
}

enum Insurance {
  JAPANESE_HEALTH_INSURANCE
  INTERNATIONAL_HEALTH_INSURANCE
  INSURANCE_NOT_ACCEPTED
}

input OrderBy {
  orderDirection: OrderDirection!
  fieldToOrder: String!
}

enum OrderDirection {
  asc
  desc
}


type Query {
  facility(id: ID!): Facility
  facilities(filters: FacilitySearchFilters!): [Facility]
  healthcareProfessional(id: ID!): HealthcareProfessional
  healthcareProfessionals(filters: HealthcareProfessionalSearchFilters!): [HealthcareProfessional]
  submission(id: ID!): Submission
  submissions(filters: SubmissionSearchFilters!): [Submission]
}

type Mutation {
  createHealthcareProfessional(
    input: CreateHealthcareProfessionalInput!
  ) : HealthcareProfessional
  updateHealthcareProfessional(
    id: ID!
    input: UpdateHealthcareProfessionalInput!
  ) : HealthcareProfessional
  deleteHealthcareProfessional(id: ID!) : Boolean
  createFacility(
    input: CreateFacilityInput!
  ): Facility
  updateFacility(
    id: ID!
    input: UpdateFacilityInput!
  ): Facility
  deleteFacility(id: ID!) : Boolean
  createSubmission(
    input: CreateSubmissionInput!
  ): Submission
  updateSubmission(
    id: ID!
    input: UpdateSubmissionInput!
  ): Submission
  deleteSubmission(id: ID!) : Boolean
}
