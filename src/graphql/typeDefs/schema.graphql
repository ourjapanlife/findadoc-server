type PersonName {
  nameId: ID!
  lastName: String!
  firstName: String!
  middleName: String!
  language: LanguageEnum
}

type Specialty {
  specialtyId: ID!
  speciality: String!
  language: LanguageEnum
}

type HealthcareProfessional {
  healthcareProfessionalId: ID!
  names: [PersonName]
  languages: [LanguageEnum]
  degrees: [Degree]
  facilities: [Facility]
  specialties: [Specialty]
  insurance: [InsuranceEnum]
}

type Contact {
  contactId: ID!
  email: String!
  phone: String!
  website: String!
  mapsLink: String!
}

type FacilityName {
  facilityNameId: ID!
  name: String!
  language: LanguageEnum
}

type Facility {
  facilityId: ID!
  name: FacilityName
  contact: Contact
  healthcareProfessionalStaff: [HealthcareProfessional]
}

enum LanguageEnum {
  English
  Japanese
  Russian
}

enum InsuranceEnum {
  nationalHealthInsurance
  internationalHealthInsurance
  noInsurance
  unknown
}

# List all queries here
type Query {
  getHealthcareProfessionaById($id) : HealthcareProfessional
  getHealthcareProfessional($searchTerm: String!, $language: LanguageEnum): [HealthcareProfessional]
}

# List all post/puts here
type Mutation {
  createHealthcareProfessional($healthCareProfessional: HealthcareProfessional!)
  creategetHealthcareProfessionals($healthCareProfessionals: [HealthcareProfessional]!)
}
