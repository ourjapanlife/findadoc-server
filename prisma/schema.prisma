// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DB_URL")
}

model PersonName {
  id                     Int                     @id @default(autoincrement())
  names                  LocaleName[]
  HealthcareProfessional HealthcareProfessional?
}

model LocaleName {
  id         Int    @id @default(autoincrement())
  locale     String
  firstName  String
  middleName String
  lastName   String

  PersonName   PersonName? @relation(fields: [personNameId], references: [id])
  personNameId Int?
}

model SpokenLanguage {
  isoCode String @id // POSSIBLE TO USE VARCHAR?
  nameJa  String
  nameEn  String

  healthcareProfessionals HealthcareProfessionalSpokenLanguage[]
}

model Specialty {
  id                       Int                     @id @default(autoincrement())
  nameJa                   String
  nameEn                   String
  HealthcareProfessional   HealthcareProfessional? @relation(fields: [healthcareProfessionalId], references: [id])
  healthcareProfessionalId Int?
}

model Degree {
  id                       Int                     @id @default(autoincrement())
  nameJa                   String
  nameEn                   String
  abbreviation             String
  HealthcareProfessional   HealthcareProfessional? @relation(fields: [healthcareProfessionalId], references: [id])
  healthcareProfessionalId Int?
}

model HealthcareProfessional {
  id              Int                                    @id @default(autoincrement())
  name            PersonName                             @relation(fields: [personNameId], references: [id])
  degree          Degree[]
  specialties     Specialty[]
  spokenLanguages HealthcareProfessionalSpokenLanguage[]
  contact         Contact                                @relation(fields: [contactId], references: [id])
  createdAt       DateTime                               @default(now())
  updatedAt       DateTime
  published       Boolean                                @default(false)

  personNameId Int @unique
  contactId    Int
}

model HealthcareProfessionalSpokenLanguage {
  HealthcareProfessional   HealthcareProfessional @relation(fields: [healthcareProfessionalId], references: [id])
  healthcareProfessionalId Int

  SpokenLanguage        SpokenLanguage @relation(fields: [spokenLanguageIsoCode], references: [isoCode])
  spokenLanguageIsoCode String

  @@id([healthcareProfessionalId, spokenLanguageIsoCode])
}

model Contact {
  id                     Int                      @id @default(autoincrement())
  email                  String
  phone                  String
  website                String
  mapsLink               String
  Facility               Facility[]
  HealthcareProfessional HealthcareProfessional[]
}

model Facility {
  id     Int    @id @default(autoincrement())
  nameEn String
  nameJa String

  createdAt DateTime @default(now())
  updatedAt DateTime
  published Boolean  @default(false)

  contact   Contact @relation(fields: [contactId], references: [id])
  contactId Int
}
